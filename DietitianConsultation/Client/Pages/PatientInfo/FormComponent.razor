@inject HttpClient _client

<EditForm Model="@patientinfo" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Patient Name: </label>
            <div>
                <InputSelect @bind-Value="patientinfo.PatientId" class="form-control">
                    <option value="">-- Select Patient --</option>
                    @if (Patients != null)
                    {
                        foreach (var patient in Patients)
                        {
                            <option value="@patient.Id">@patient.Name</option>}
                    }
                </InputSelect>
                <ValidationMessage For="@(() => patientinfo.PatientId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Patient DOB: </label>
            <div>
                <InputSelect @bind-Value="patientinfo.PatientId" class="form-control">
                    <option value="">-- Select Patient --</option>
                    @if (Patients != null)
                    {
                        foreach (var patient in Patients)
                        {
                            <option value="@patient.Id">@patient.DateOfBirth</option>}
                    }
                </InputSelect>
                <ValidationMessage For="@(() => patientinfo.PatientId)" />
            </div>
        </div>

        <div class="form-group">
            <label> BMI: </label>
            <div>
                <InputNumber @bind-Value="@patientinfo.BMI" class="form-control" />
                <ValidationMessage For="@(() => patientinfo.BMI)" />
            </div>
        </div>

        <div class="form-group">
            <label>MedicalHistory: </label>
            <div>
                <InputText @bind-Value="@patientinfo.MedicalHistory" class="form-control" />
                <ValidationMessage For="@(() => patientinfo.MedicalHistory)" />
            </div>
        </div>

        <div class="form-group">
            <label>ActivityRate: </label>
            <div>
                <InputText @bind-Value="@patientinfo.ActivityRate" class="form-control" />
                <ValidationMessage For="@(() => patientinfo.ActivityRate)" />
            </div>
        </div>

        <div class="form-group">
            <label>Goals: </label>
            <div>
                <InputText @bind-Value="@patientinfo.Goals" class="form-control" />
                <ValidationMessage For="@(() => patientinfo.Goals)" />
            </div>
        </div>

        <div class="form-group">
            <label>TargetWeight: </label>
            <div>
                <InputNumber @bind-Value="@patientinfo.TargetWeight" class="form-control" />
                <ValidationMessage For="@(() => patientinfo.TargetWeight)" />
            </div>
        </div>

        <div class="form-group">
            <label>TargetHeight: </label>
            <div>
                <InputNumber @bind-Value="@patientinfo.TargetHeight" class="form-control" />
                <ValidationMessage For="@(() => patientinfo.TargetHeight)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>
    }
            <BackToList Target="patientinfos" />
</EditForm>

@code { 
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public PatientInfo patientinfo { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Patient> Patients;

    protected async override Task OnInitializedAsync()
    {
        Patients = await _client.GetFromJsonAsync<List<Patient>>($"{Endpoints.PatientsEndpoint}");
    }
}

