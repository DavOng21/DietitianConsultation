@page "/patientinfos/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title"> PatientInfos List</h3>

@if (PatientInfos == null)
{
    <div class="alert alert-info">Loading PatientInfos...</div> }
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>BMI</th>
                <th>MedicalHistory</th>
                <th>ActivityRate</th>
                <th>Goals</th>
                <th>TargetWeight</th>
                <th>TargetHeight</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var patientinfo in PatientInfos)
            {
                <tr>
                    <td>@patientinfo.BMI</td>
                    <td>@patientinfo.MedicalHistory</td>
                    <td>@patientinfo.ActivityRate</td>
                    <td>@patientinfo.Goals</td>
                    <td>@patientinfo.TargetWeight</td>
                    <td>@patientinfo.TargetHeight</td>
                    <td>
                        <a href="/patientinfos/view/@patientinfo.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/patientinfos/edit/@patientinfo.Id" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(patientinfo.Id))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>}
@code{
    private List<PatientInfo> PatientInfos;

    protected async override Task OnInitializedAsync()
    {
        PatientInfos = await _client.GetFromJsonAsync<List<PatientInfo>>($"{Endpoints.PatientInfosEndpoint}");
    }

    async Task Delete(int patientinfoId)
    {
        var patientinfo = PatientInfos.First(q => q.Id == patientinfoId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {patientinfo.Id}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.PatientInfosEndpoint}/{patientinfoId}");
            await OnInitializedAsync();
        }
    }

}
